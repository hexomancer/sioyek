#version 330 core

out vec4 color;
in vec2 screen_pos;
in vec2 uvs;
uniform sampler2D pdf_texture;

uniform float contrast;

//http://gamedev.stackexchange.com/questions/59797/glsl-shader-change-hue-saturation-brightness
vec3 rgb2hsv(vec3 c)
{
    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));

    float d = q.x - min(q.w, q.y);
    float e = 1.0e-10;
    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
}

vec3 hsv2rgb(vec3 c)
{
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}


void main(){
    vec3 tempcolor = texture(pdf_texture, uvs).rgb;
    vec3 hsvcolor = rgb2hsv(tempcolor);

    float hsv_lightness = hsvcolor.b;
    float rgb_lightness = min(min(tempcolor.r, tempcolor.g), tempcolor.b);
    float new_lightness = (rgb_lightness + hsv_lightness) / 2.0;

    //vec3 newcolor = hsv2rgb(vec3(hsvcolor.rg, 1-hsvcolor.b));
    vec3 newcolor = hsv2rgb(vec3(hsvcolor.rg, 1-new_lightness));
    color = vec4(newcolor * contrast, 1.0);
}
